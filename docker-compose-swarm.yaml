version: "3.8"

services:
  nginx:
    build:
      context: nginx
    image: ghcr.io/smashedr/github-readme-stats-nginx:latest
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "1.0"
          memory: 32M
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        - traefik.constraint-label=traefik-public
        - traefik.http.routers.github-readme-stats-http.rule=Host(`github-readme-stats.cssnr.com`)
        - traefik.http.routers.github-readme-stats-http.entrypoints=http
        - traefik.http.routers.github-readme-stats-http.middlewares=https-redirect
        - traefik.http.routers.github-readme-stats-https.rule=Host(`github-readme-stats.cssnr.com`)
        - traefik.http.routers.github-readme-stats-https.entrypoints=https
        - traefik.http.routers.github-readme-stats-https.tls=true
        - traefik.http.services.github-readme-stats-https.loadbalancer.server.port=80
    #healthcheck:
    #  test: ["CMD-SHELL", "curl -sf localhost:80/health-check || exit 1"]
    #  interval: 30s
    #  timeout: 10s
    #  retries: 3
    #  start_period: 30s
    depends_on:
      - app
    networks:
      - internal
      - traefik-public

  app:
    build:
      context: app
    image: ghcr.io/smashedr/github-readme-stats-app:latest
    command: "node express.js"
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "2.0"
          memory: 64M
    #healthcheck:
    #  test: ["CMD-SHELL", "curl -sf localhost:3000/app-health-check || exit 1"]
    #  interval: 30s
    #  timeout: 10s
    #  retries: 3
    #  start_period: 30s
    networks:
      - internal

networks:
  internal:
    driver: overlay
  traefik-public:
    external: true
